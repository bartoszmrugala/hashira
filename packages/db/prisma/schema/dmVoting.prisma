model DmPoll {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  startedAt   DateTime?
  deletedAt   DateTime?
  finishedAt  DateTime?
  createdById String
  title       String
  content     String

  createdBy    User                @relation(fields: [createdById], references: [id])
  options      DmPollOption[]
  participants DmPollParticipant[]
  optOuts      DmPollExclusion[]
}

model DmPollOption {
  id       Int                @id @default(autoincrement())
  pollId   Int
  option   String
  row      Int
  isOptOut Boolean            @default(false)
  style    DiscordButtonStyle @default(secondary)
  emoji    String?

  poll  DmPoll       @relation(fields: [pollId], references: [id])
  votes DmPollVote[]
}

model DmPollParticipant {
  pollId    Int
  userId    String
  messageId String?

  poll DmPoll @relation(fields: [pollId], references: [id])
  user User   @relation(fields: [userId], references: [id])

  @@id([pollId, userId])
  @@unique([pollId, userId])
}

model DmPollVote {
  userId   String
  optionId Int

  user   User         @relation(fields: [userId], references: [id])
  option DmPollOption @relation(fields: [optionId], references: [id])

  @@id([userId, optionId])
  @@unique([userId, optionId])
}

// Global list of exclusions
model DmPollExclusion {
  userId               String   @id @unique
  createdAt            DateTime @default(now())
  optedOutDuringPollId Int      @map("excludedByPollId")

  user               User   @relation(fields: [userId], references: [id])
  optedOutDuringPoll DmPoll @relation(fields: [optedOutDuringPollId], references: [id])
}
